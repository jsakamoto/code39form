{"version":3,"sources":["src/index.ts"],"names":["Code39Form","updateBarcodeImage","inputLine","$inputLine","$","id","html","barcode","text","barWidth","showHRI","updateUIState","toggleClass","inputLines","length","setFocus","focus","storageService","get","key","localStorage","getItem","put","value","setItem","cookie","inputLinesJson","JSON","parse","$inputLinesContainer","source","template","Handlebars","compile","forEach","append","document","on","newId","map","l","reduce","prev","current","Math","max","newLine","push","stringify","e","target","closest","lineId","data","confirm","remove","filter","line","pop","index","indexOf","splice","input","setTimeout","newText","toUpperCase","undefined","window","onerror","message","url","lineNumber","columnNumber","exception","stack","alert"],"mappings":"AACA,IAAUA,YAAV,SAAUA,GAkFN,SAAAC,EAA4BC,GACxB,IAAIC,EAAaC,EAAE,oBAAsBF,EAAUG,GAAK,KACxDD,EAAE,iBAAkBD,GAAYG,KAAK,IAAIC,QAAQL,EAAUM,KAAM,UAAYC,SAAU,EAAGC,SAAS,IAGvG,SAAAC,IACIP,EAAE,sBAAsBQ,YAAY,WAAYC,EAAWC,OAAS,GAGxE,SAAAC,EAAkBV,GACdD,EAAE,kBAAkBC,GAAMW,QA/E9B,IAAIC,EAsF0B,IAF0B,oBAAnB,eAIzBC,IAAK,SAACC,GAAgB,OAAAC,aAAaC,QAAQF,IAC3CG,IAAK,SAACH,EAAaI,GAAkB,OAAAH,aAAaI,QAAQL,EAAKI,MAK/DL,IAAK,SAACC,GAAgB,OAAAf,EAAEqB,OAAON,IAC/BG,IAAK,SAACH,EAAaI,GAAkB,OAAAnB,EAAEqB,OAAON,EAAKI,KA7F3DG,EAAiBT,EAAeC,IAAI,eAAiB,uBACrDL,EAAac,KAAKC,MAAMF,GAExBG,EAAuBzB,EAAE,0BAGzB0B,EAAS1B,EAAE,kBAAkBE,OAC7ByB,EAAWC,WAAWC,QAAQH,GAGlCjB,EAAWqB,QAAQ,SAAAhC,GACf,IAAII,EAAOyB,EAAS7B,GACpB2B,EAAqBM,OAAO7B,GAC5BL,EAAmBC,KAEvBS,IAIAP,EAAEgC,UAAUC,GAAG,QAAS,kBAAmB,WACvC,IAAIC,EAAQzB,EAAW0B,IAAI,SAAAC,GAAK,OAAAA,EAAEnC,KAAIoC,OAAO,SAACC,EAAMC,GAAY,OAAAC,KAAKC,IAAIH,EAAMC,KAAY,EACvFG,GAAYzC,GAAIiC,EAAO9B,KAAM,IAC7BF,EAAOyB,EAASe,GACpBjB,EAAqBM,OAAO7B,GAE5BO,EAAWkC,KAAKD,GAChB7B,EAAeK,IAAI,aAAcK,KAAKqB,UAAUnC,IAChDF,IACAI,EAASuB,KAGblC,EAAEgC,UAAUC,GAAG,QAAS,oCAAqC,SAACY,GAC1D,IAAI9C,EAAaC,EAAE6C,EAAEC,QAAQC,QAAQ,eACjCC,EAASjD,EAAWkD,KAAK,WAC7B,KAAIjD,EAAE,eAAeU,OAAS,GAC9B,GAAKwC,QAAQ,iBAAb,CAKAnD,EAAWoD,SAEX,IAAIrD,EAAYW,EAAW2C,OAAO,SAAAC,GAAQ,OAAAA,EAAKpD,IAAM+C,IAAQM,MACzDC,EAAQ9C,EAAW+C,QAAQ1D,GAC/BW,EAAWgD,OAAOF,EAAO,GAEzB1C,EAAeK,IAAI,aAAcK,KAAKqB,UAAUnC,IAChDF,IACAI,GAAUF,EAAW8C,IAAU9C,EAAWA,EAAWC,OAAS,IAAIT,SAZ9DU,EAASqC,KAejBhD,EAAEgC,UAAUC,GAAG,uBAAwB,kCAAmC,SAACY,GACvE,IACIG,EADahD,EAAE6C,EAAEC,QAAQC,QAAQ,eACbE,KAAK,WACzBS,EAAQb,EAAEC,OACda,WAAW,WACP,IAAIC,EAAUF,EAAMvC,MAAM0C,cACtB/D,EAAYW,EAAW2C,OAAO,SAAAC,GAAQ,OAAAA,EAAKpD,IAAM+C,IAAQM,WAC5CQ,GAAbhE,GAA0BA,EAAUM,MAAQwD,IAC5C9D,EAAUM,KAAOwD,EACjB/D,EAAmBC,GACnBe,EAAeK,IAAI,aAAcK,KAAKqB,UAAUnC,MAGrD,KAqCPsD,OAAOC,QAAe,SAAUC,EAAiBC,EAAcC,EAAqBC,EAAuBC,GACvGA,EAAYA,IAAoBJ,QAAOA,EAAEK,OAAUJ,GAAO,0BAAwB,IAAIC,EAAU,IAAIC,EAAY,KAChHG,MAAMF,IAtHd,CAAUzE,aAAAA","file":"index.min.js","sourcesContent":["\r\nnamespace Code39Form {\r\n\r\n    interface InputLine {\r\n        id: number;\r\n        text: string;\r\n    }\r\n\r\n    interface StorageService {\r\n        get(key: string): string;\r\n        put(key: string, value: string): void;\r\n    }\r\n\r\n    // Initialize storage service.\r\n    let storageService = initializeStorageService();\r\n\r\n    let inputLinesJson = storageService.get('inputLines') || '[{\"id\":1,\"text\":\"\"}]';\r\n    let inputLines = JSON.parse(inputLinesJson) as InputLine[];\r\n\r\n    let $inputLinesContainer = $('.input-lines-container');\r\n\r\n    // Prepare template.\r\n    let source = $(\"#line-template\").html();\r\n    let template = Handlebars.compile(source);\r\n\r\n    // Initial display view.\r\n    inputLines.forEach(inputLine => {\r\n        let html = template(inputLine);\r\n        $inputLinesContainer.append(html);\r\n        updateBarcodeImage(inputLine);\r\n    });\r\n    updateUIState();\r\n\r\n    // Wire up event handlers.\r\n\r\n    $(document).on('click', '.add-input-line', () => {\r\n        let newId = inputLines.map(l => l.id).reduce((prev, current) => Math.max(prev, current)) + 1;\r\n        let newLine = { id: newId, text: '' };\r\n        let html = template(newLine);\r\n        $inputLinesContainer.append(html);\r\n\r\n        inputLines.push(newLine);\r\n        storageService.put('inputLines', JSON.stringify(inputLines));\r\n        updateUIState();\r\n        setFocus(newId);\r\n    });\r\n\r\n    $(document).on('click', '.remove-input-line:not(.disabled)', (e) => {\r\n        let $inputLine = $(e.target).closest('.input-line');\r\n        let lineId = $inputLine.data('line-id');\r\n        if ($('.input-line').length < 2) return;\r\n        if (!confirm('Are you sure?')) {\r\n            setFocus(lineId);\r\n            return;\r\n        }\r\n\r\n        $inputLine.remove();\r\n\r\n        let inputLine = inputLines.filter(line => line.id == lineId).pop();\r\n        let index = inputLines.indexOf(inputLine);\r\n        inputLines.splice(index, 1);\r\n\r\n        storageService.put('inputLines', JSON.stringify(inputLines));\r\n        updateUIState();\r\n        setFocus((inputLines[index] || inputLines[inputLines.length - 1]).id);\r\n    });\r\n\r\n    $(document).on('change keydown paste', '.input-line .control input:text', (e) => {\r\n        let $inputLine = $(e.target).closest('.input-line');\r\n        let lineId = $inputLine.data('line-id') as number;\r\n        let input = e.target as HTMLInputElement;\r\n        setTimeout(() => {\r\n            let newText = input.value.toUpperCase();\r\n            let inputLine = inputLines.filter(line => line.id == lineId).pop();\r\n            if (inputLine != undefined && inputLine.text != newText) {\r\n                inputLine.text = newText;\r\n                updateBarcodeImage(inputLine);\r\n                storageService.put('inputLines', JSON.stringify(inputLines));\r\n            }\r\n\r\n        }, 0);\r\n    });\r\n\r\n    function updateBarcodeImage(inputLine: InputLine): void {\r\n        let $inputLine = $('div[data-line-id=' + inputLine.id + ']');\r\n        $('.barcode-image', $inputLine).html('').barcode(inputLine.text, 'code39', { barWidth: 3, showHRI: false });\r\n    }\r\n\r\n    function updateUIState(): void {\r\n        $('.remove-input-line').toggleClass('disabled', inputLines.length < 2);\r\n    }\r\n\r\n    function setFocus(id: number): void {\r\n        $(`#barcode-input-${id}`).focus();\r\n    }\r\n\r\n    function initializeStorageService(): StorageService {\r\n\r\n        let enableLocalStorage = (typeof (localStorage) !== 'undefined');\r\n        let storageService = null as StorageService;\r\n        if (enableLocalStorage == true) {\r\n            storageService = {\r\n                get: (key: string) => localStorage.getItem(key),\r\n                put: (key: string, value: string) => localStorage.setItem(key, value)\r\n            };\r\n        }\r\n        else {\r\n            storageService = {\r\n                get: (key: string) => $.cookie(key),\r\n                put: (key: string, value: string) => $.cookie(key, value)\r\n            };\r\n        }\r\n        return storageService;\r\n    }\r\n\r\n\r\n    // Global error handling.\r\n    window.onerror = <any>function (message: string, url?: string, lineNumber?: number, columnNumber?: number, exception?: Error) {\r\n        exception = exception || <any>{ message, stack: `${url || '- unknown souce file -'}(${lineNumber}:${columnNumber})` };\r\n        alert(exception);\r\n    };\r\n}"]}